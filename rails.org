* routes

- 在 =config/routes.rb= 中定义 routes
- 通过 =rake routes= 查看路径

* model

- 用 =rails generate model= 生成代码
- 用 =rake db:migrate= 来生成数据库
- 建立 model 对象时要求 *强类型* ，不能直接用 JSON 来反射，而需要指定各个字段
  #+begin_src
  params.require(:product).permit(:field1, :field2)
  #+end_src

* controller

- =app/controllers= 下的类是 controller
- controller 类中的方法是 action，用 =controller#acttion= 来表示
- 可用 =rails generate controller= 生成
- controller 中定义的成员变量可以在 view 中使用
- controller 可以重定向到 =ActiveRecord= 对象，代表重定向至其 =show= action

* view

- 在 action 中 =render= ，得到 JSON 等格式
- 在 action 中不是 =render= 的话，处理完会转到 =app/view/controller/action.html.erb= 的 view 中
- 用 =link_to= 来指定超链接
- 删除时的确认是加在 view 上的，通过 JS 实现
- =_= 开头的 erb 文件是 partial 文件，可以在其它 erb 文件中 render

* form_for

- =form_for= 的时候应该就会产生 JSON 一类的对象，传递给 controller

* helper

- helper 可以认为是 rails 的一些全局变量，对应关系可以通过 =rake routes= 查看

* render 与 redirect

- 正常的流程：有请求来，访问 controller，处理完转到对应的 view
- render：从 controller 跳到其它的 view
- redirect：发起一个新的请求

* validation

- 在 model 中调用 =validates= 方法
- 将决定 =save= 与 =update= 是否成功
